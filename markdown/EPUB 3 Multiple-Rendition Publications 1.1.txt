# EPUB 3多重內容釋義出版品 1.1 
W3C編輯草稿 14 October 2022

更多關於此份文件的細節

本版本：
https://w3c.github.io/epub-specs/epub33/multi-rend/

最新發佈版本：
https://www.w3.org/TR/epub-multi-rend-11/

最新編輯草稿
https://w3c.github.io/epub-specs/epub33/multi-rend/

歷史：
https://www.w3.org/standards/history/epub-multi-rend-11
Commit history

編輯者：
Matt Garrish (DAISY Consortium)

前任編輯：
Jim Lester (Barnes & Noble)
Takeshi Kanai (Sony Corporation)

提出回饋：
GitHub w3c/epub-specs(提交請求, 新主題, 開放主題)
以郵件主旨[epub-multi-rend-11] … 主題資訊 …寄到public-epub-wg@w3.org (存檔)

Copyright © 2015-2022 W3C® (MIT, ERCIM, Keio, Beihang). W3C liability, trademark and permissive document license rules apply.

# 摘要

EPUB多重內容釋義（Rendition）出版品定義如何製作與處理由一個以上內容釋義構成的EPUB®出版品。


# 本文件狀態

本章節描述了本文件在其發表時的狀態。目前W3C出版品及此技術報告的最新改版之列表皆列於W3C技術報告索引，網址為：https://www.w3.org/TR/

本文件由EPUB 3工作小組發布為編輯草稿。

編輯草稿狀態之出版品不受W3C及其會員背書。

本文件為草稿，而且可能會隨時更新，被其他文件所取代或淘汰。編輯作業尚未完成前，不適宜引用本文件。

本文件由W3C專利政策下所運作的小組所製作。W3C維護一份與該小組交付成果有關的任何專利披露公開清單，該頁面也包含了專利披露的說明。任何人若實際擁有某項專利知識並相信其包含該專利之主要申請範圍，則必須依照W3C專利政策第六節之規定揭露該訊息。

本文件受2021年11月2日W3C流程文件所規範。

# 目次

摘要

本文件狀態

1. 導論
1.1 總覽
1.2 背景說明
1.3 與EPUB 3的關係
1.4 術語
1.5 適用性
2. 指定多重內容釋義
3. 後設資料表述
3.1 內容釋義後設資料
3.2 出版品後設資料
3.2.1 metadata.xml檔案
3.2.1.1 資源模糊化
3.2.2 用語關聯機制
4. 選擇內容釋義
4.1 導論
4.2 內容適用性
4.3 閱讀系統適用性
4.4 供選擇內容釋義用的屬性
4.4.1 rendition:media屬性
4.4.2 rendition:layout屬性
4.4.3 rendition:language屬性
4.4.4 rendition:accessMode屬性
4.4.5 rendition:label屬性
4.5 處理模型
5. 內容釋義映射
5.1 導論
5.2 內容適用性
5.3 閱讀系統適用性
5.4 EPUB內容釋義映射文件定義
5.4.1 XHTML內容文件：限制
5.4.2 nav元素：變更與限制
5.4.3 內容釋義映射
5.4.4 在容器中識別
5.5 處理模型
A. 綱要
A.1 Metadata.xml綱要
A.2 Container.xml綱要
A.3 映射文件綱要
B. 變更日誌
C. 謝詞
D. 參考資料
D.1 規範性文件
D.2 參考性文件

# 1. 導論

## 1.1 總覽

本章節為非規範性。

隨著閱讀系統的進化以及日趨複雜，在EPUB出版品內包含一個以上內容釋義的需求逐日增加。有些變更內容的措施能夠在樣式表層級完成，能達成的範圍以及內容處理的方式都有所限制。包裝文件中既有的退回機制同樣僅能保證內容能被處理而已。

內容適應（Adaptation）不是只為了對樣式最佳化，以及考量到螢幕特性，如尺寸以及色彩，或者閱讀系統的方向來配置內容，而經常會設計對內容自身的改變。用來處理一本出版品固定版面內容釋義的資源以及標記可能會和相同內容的可重排版本重疊，但兩者絕對不可能相同。內容適應也可能涉及對內容文字的修改。在這相互連結日益緊密的世界，包含作品的多重語文翻譯的做法，比起分別製作單一語言的EPUB出版品在綁在一起提供可能更符合需求。從一份內容釋義中的位置，在閱讀環境改變時，能跳到另一個內容釋義中相等的位置，此項可能性也與內容適應相關。

本規格定義了閱讀系統如何從多個EPUB製作者提供的內容釋義中，選擇最適合目前裝置特徵以及使用者偏好的內容——而不是定義如何即時變更內容的手段。舉個例子，當使用者以偏好的方式持用裝置，而改變了裝置的方向時，閱讀系統就可以尋找更合適的內容釋義，以這裡定義的功能來做無縫切換。

本規格描述如何對多重內容釋義EPUB出版品進行發現、選擇、彼此映射的主要需求。特別是：

- 對所有在META-INF/metadata.xml檔案中的內容釋義建立共通的唯一識別碼。

- 透過一組屬性來對內容釋義進行選擇，屬性可以附加在容器文件中的rootfile元素。

- 選擇性提供讓一份內容釋義中的位置透過一份映射文件，移動到另一份內容釋義中相同位置的能力。

集合以上功能，就能製作出先進的多重內容釋義出版品，讓閱讀系統能夠在使用者改變需求時自動適應。

## 1.2 背景說明

本章節為非規範性。

在EPUB出版品中包含多重內容釋義的概念從EPUB規格誕生就已經存在，但是規格卻從來沒有完整地說明這些內容釋義是為了什麼而存在，以及如何進行存取。結果使得EPUB 3規格等於僅具備單一內容的EPUB出版品。而且多數的EPUB製作者以及閱讀系統開發者都認為EPUB出版品僅有單一包裝文件，位置在container.xml檔案[epub-33]的第一個rootfile元素中。

然而在實踐上，container.xml檔案並不限制EPUB製作者只能列出一個內容文件。舉個例子，在EPUB 2中，EPUB製作者可以添加額外的rootfile元素用來參照其他想要的格式（比如，另外一個包裝文件、一份PDF檔案，甚至是一份Word文件）。在EPUB 3中，rootfile元素限制僅能用於參照符合相同版本標準的包裝文件。

本規格將進一步允許多重內容釋義能定義更完整的框架，來識別並且在其中進行選擇。每一份在rootfile元素中參照的內容文件都定義了EPUB出版品中的一個內容釋義，而第一份內容文件代表為預設的內容釋義（也就是說，所有閱讀系統都必須處理的那一份）。

儘管此模型預期能夠盡可能無縫地在既存的EPUB生態體系運作，但製作多重內容釋義需要為了維持相容性而做出一些妥協（例如，對於無法處理多重內容釋義的閱讀系統而言，可能會需要一些重複的後設資料）。

## 1.3 與EPUB 3的關係

在本規格中定義在一個EPUB容器中包含多重內容釋義的方法，並非所有的EPUB出版品都有需求。在一份容器中也可能有多重內容釋義，但與本規格沒有緊密關連，主要是因為在本規格之前，就能夠建立多重內容釋義的容器了。

所以，我們強烈推薦未來所有在容器中加入多重內容釋義的需求，都該遵從本規格。既有的實作若運用了其他的方法在多重內容釋義中進行選擇，也鼓勵考慮改用本規格，來增進整體對多重內容釋義出版品的互通性。

許多在本規格中定義的內容釋義選擇屬性，和包裝文件元素以及特性[epub-33]共用名稱，但在設計上是為了反映用於選擇目的的資訊。

儘管有此相同性，本規格並不強制讓位於rootfile元素[epub-33]中的內容釋義選擇特性與對應內容文件所對應的後設資料彼此對等，並非隨時都能做到直接的對等。

例如，一份多種語文的EPUB出版品會定義多於一個的dc:language元素[epub-33]——每種語言各一——但在內容釋義選擇上只能定義一個主要語言。同樣的，定義在包裝文件上的語言可以包含一個指定的區域代碼，但供選擇用途的話，EPUB製作者只能提供語言代碼作為識別。

在兩處提供共通後設資料的原因是為了簡化選擇程序：提供屬性是為了避免要處理所有參照的包裝文件，同時在包裝層級上不可能允許表述最重要的資訊。這也避免用於不同目的（「選擇使用」對「處理用途」）的後設資料產生對立或者產生歧義。

定義在container.xml檔案[epub-33]中的選擇特性不會附加任何處理行為。舉個例子，在rendition:layout屬性中指出內容釋義為固定版面，並不會在指定的內容釋義中啟動固定版面的處理行為。

閱讀系統在處理內容釋義時，僅需根據在包裝文件中表述的後設資料。

## 1.4 術語

本規格使用定義在EPUB 3[epub-33]中的術語。

另外定義了以下術語：

### 容器文件

位於EPUB容器根目錄[epub-33]的子META-INF資料夾中的container.xml檔案。在容器中的每一份內容釋義都由一個rootfile元素[epub-33]來作為識別。

### 預設內容釋義

在container.xml檔案[epub-33]中，第一個rootfile元素所列出的內容釋義。

### 多重內容釋義出版品

一本包含兩個以上內容釋義內容的EPUB出版品。

### 內容釋義

對一本EPUB出版品內容，按照內容文件中表述進行的一項處理。

### 內容釋義映射文件

一份特化的XHTML內容文件，其中包含了機器可讀取的映射資料用以對照不同內容釋義的對等內容，其合乎內容釋義映射中所表述的限制。

###### 注意事項

每一章節中只有術語第一次出現時會連結到其定義。

## 1.5 適用性

本規格中被標註為非規範性的章節，以及所有製作準則、圖表、範例以及注意事項都為非規範性。本規格其他部分皆為規範性。

關鍵字：可以（MAY）、必須（MUST）、不得（MUST NOT）、選擇性（OPTIONAL）、推薦（RECOMMENDED），以及應該（SHOULD)在本文件中僅有已如上方式以粗體出現時，須按照BCP 14 [RFC2119] [RFC8174]中的敘述詮釋。

# 2. 指定多重內容釋義

EPUB出版品中的每一份內容釋義都必須符合EPUB出版品[epub-33]中的需求。

每一份內容釋義的包裝文件必須列於container.xml檔案[epub-33]，列於第一個的包裝文件代表為預設的內容釋義。

###### 範例 1

以下範例呈現在同一個容器中提供SVG與XHTML內容釋義的組合：

<?xml version="1.0"?>
<container version="1.0" xmlns="urn:oasis:names:tc:opendocument:xmlns:container">
    <rootfiles>
        <rootfile full-path="SVG/Sandman.opf"
            media-type="application/oebps-package+xml" />
        <rootfile full-path="XHTML/Sandman.opf"
            media-type="application/oebps-package+xml" />
    </rootfiles>
</container>

EPUB出版品中的每一份內容釋義都應該僅在其包裝文件的宣告[epub-33]中列舉處理使用為必要的出版品資源。不同的內容釋義可以參照相同的出版品資源。

###### 注意事項

並非所有的閱讀系統都能讓內容釋義存取儲存在鄰接資料夾中的資源（也就是，有些閱讀系統不會給予內容釋義的包裝文件所儲存的資料夾以外的存取權限）。

例如以下目錄結構（為了簡潔起見，除了包裝文件以外的所有資源都被省略）：

/META-INF
/Rendition1
   - rendition1.opf
/Rendition2
   - rendition2.opf
/Shared

在「Rendition1」資料夾中的資源，可能無法存取位於「Rendition2」或「Shared」中的資源。

若要在不同內容釋義間共享資源，建議將包裝文件都置放在同一個資料夾中，並且把不同內容釋義的資源存放在個別的子資料夾中。

將上面範例重構如下，即可存取所有共享的資源：

/META-INF
/EPUB
   /Rendition1
   /Rendition2
   /Shared
   - rendition1.opf
   - rendition2.opf

# 3. 後設資料表述

## 3.1 內容釋義後設資料

在內容釋義層級表述的後設資料，可能因案例而有不同。例如，用於區分語言的內容釋義可能有著不同的主要語言以及特定語言的後設資料，如標題，會分別表述。同樣的，將固定版面以及可重排內容釋義放在一起，其排版後設資料表述也會不同。

## 3.2 出版品後設資料

### 3.2.1 metadata.xml檔案

為了確保在出版品以及內容釋義等級的後設資料維持恆定，本規格定義了在metadata.xml檔案[epub-33]中根metadata元素的內容模型，和包裝文件中的metadata元素[epub-33]相同，但以下語法和語意有所不同：

- 一個dc:identifier元素[dcterms]必須包含唯一識別碼[epub-33]供EPUB出版品使用。

- 一個meta元素[epub-33]必須包含最後修改日期，使用dcterms:modified特性進行表述[dcterms]。該特性的值必須合乎[epub-33]所定義最後修改日期的模式與規則。僅允許一個dcterms:modified特性得以不搭配refines屬性[epub-33]出現。

- 所有其他的詮釋資料都為選擇性。

- 不允許使用過時的OPF2 meta元素[epub-33]。

- meta與link元素和metadata跟元素一樣定義在相同的命名空間：http://www.idpf.org/2013/metadata

- 為了讓位於metadata.xml檔案中的後設資料全部都能用於表述，所有允許在package元素[epub-33]中使用的屬性，都允許用於根metadata元素。

###### 注意事項

本檔案中的內容也非正式地透過一個XML剛要進行定義，請見A.1 Metadata.xml綱要也獲得更多細節。

本規格不定義一個模型，讓後設資料可以從出版品層級繼承到內容釋義層級，EPUB處理上僅要求預設的內容釋義能被閱讀系統所辨識（換句話說，依靠繼承的話，可能會讓閱讀系統無法掌握必要的後設資料）。

###### 注意事項

強烈建議EPUB製作者在預設內容釋義中包含完整出版品後設資料，以確保在使用該檔案時的相容性。

書名、語言以及其他後設資料通常在跨內容釋義時不能適用，這使得共享後設資料變得更未複雜。無論內容釋義是否有對後設資料進行表述，都不能假設在metadata.xml檔案中的後設資料能夠套用到所有的內容釋義上。

###### 注意事項

由於[epub-33]並未定義供metadata.xml檔案使用的內容模型，不合乎本規格的EPUB出版品可以包含不同的後設資料。EPUB出版品若違反本章節的內容模型限制，就並非本規格所定義的多重內容釋義出版品，但還是可以為合規的EPUB 3出版品。

強烈建議EPUB製作者，儘管不是為了產製多重內容釋義出版品，也該改使用本規格定義的內容模型，以確保處理上的穩定。

#### 3.2.1.1 資源模糊化

資源模糊化演算法[epub-33]仰賴由該EPUB出版品之唯一識別碼產生的模糊化密鑰[epub-33]。

為了相容性原因，以及為了跨內容釋義分享資源的複雜性，本規格不改變此項需求，但將其套用到所有位於EPUB容器中的模糊化資源。

結果而論，EPUB製作者必須使用預設內容釋義的唯一識別碼作為模糊化密鑰，供所有多重內容釋義出版品中的所有資源使用。

同樣的，閱讀系統必須使用預設內容釋義的唯一識別碼來為多重內容釋義出版品中的所有資源進行去模糊化。

### 3.2.2 用語關聯機制

本規格繼承了定義在[epub-33]中的用語關聯機制，其與包裝文件的後設資料相關，僅有以下差異：prefix屬性可能僅能添加在根metadata元素上。

供後設資料屬性表述而保留的字首[epub-33]皆可無變更地採用。

# 4. 選擇內容釋義

## 4.1 導論

儘管每一份EPUB出版品代表單一作品，但也可能以不同複數不同的方法來處理該作品。例如一期雜誌，可能包含著固定版面版本（印刷版複製品）用來針對平板尺寸螢幕進行處理，也會包含一份可重排版本供較小的手機螢幕使用，原因是在手機螢幕上固定版面會被縮到難以閱讀（或者在不支援固定版面時，自動切換成非預期的重排）。

EPUB容器能讓一本EPUB出版品包含內容的多重內容釋義，但卻無法指定閱讀系統如何透過列於容器文件中各內容釋義具備的獨特特性來進行判斷，或者在之間進行選擇。

本章節試著補救這問題，透過兩項定義，一是一組能夠添加在容器文件中rootfile元素[epub-33]上的內容釋義選擇屬性；另一是一套處理模型，能讓EPUB製作者在不同的狀況下指定哪一個內容釋義能提供最佳的呈現。

閱讀系統能以此從內容釋義表列中選擇最合適的呈現，以符合當下的硬體配置以及使用者偏好。

## 4.2 內容適用性

一份容器文件：

- 必須符合[epub-33]中容器 – META-INF/container.xml一節對container.xml的定義以及需求。

- 可能包含任何定義在內容釋義選擇屬性一節中的選擇用屬性。

- 可能包含[epub-33]中rootfile元素中供預設內容釋義使用的選擇用屬性。

- 第二個以後的每一個rootfile元素都應該在選擇性標籤之外，包含至少一個選擇用屬性。

## 4.3 閱讀系統適用性

EPUB閱讀系統應該以定義在4.5處理模型的方式來判斷應該對使用者呈現哪一個內容釋義。

## 4.4 供選擇內容釋義用的屬性

###### 注意事項

在container.xml檔案[epub-33]中使用內容釋義選擇屬性，也非正式地透過一份XML綱要進行定義。請見A.2 Container.xml綱要以獲得更多細節。

### 4.4.1 rendition:media屬性

rendition:media用於識別閱讀系統的媒體功能，以判斷該內容釋義是否最適宜做為處理對象。

### 屬性名稱
media

### 命名空間
http://www.idpf.org/2013/rendition

### 用法
可以用於容器文件的rootfile元素[epub-33].

### 值
為一個CSS 3媒體查詢（media query） [mediaqueries]，必須只能在其值為"all"的狀況下，選擇該媒體類型。

如[mediaqueries]所述，在本屬性中的媒體查詢必須判斷為真，才能讓該內容釋義被選擇來進行處理。若媒體查詢如[mediaqueries]3.1錯誤處理章節，被判斷為"not all”時，應該被當作為假，供內容釋義選擇目的使用（也就是說該內容釋義並不合規而不適合）。

###### 範例 2

以下範例呈現在同一個容器中同捆的兩份The Sandman之內容釋義，一份對寬度超過1920像素的螢幕進行最佳化。在螢幕尺寸小於1920像素時，將會使用預設的內容釋義。

<container xmlns="urn:oasis:names:tc:opendocument:xmlns:container"
           xmlns:rendition="http://www.idpf.org/2013/rendition"
           version="1.0">
   <rootfiles>
       <rootfile full-path="Sandman.opf"
           media-type="application/oebps-package+xml"/>
       <rootfile full-path="Sandman-large.opf"
           media-type="application/oebps-package+xml"
            rendition:media="(min-width: 1920px)"/>
   </rootfiles>
</container>

### 4.4.2 rendition:layout屬性

rendition:layout屬性指示該內容釋義為可重排或者預先分頁（固定版面）。

### 屬性名稱
layout

### 命名空間
http://www.idpf.org/2013/rendition

### 用法
可以用於容器文件的rootfile元素[epub-33].

### 值
本屬性的值必須為reflowable或pre-paginated.

當指定時，本屬性的值必須符合參照內容釋義的全域rendition:layout設定[epub-33]

如果在閱讀系統中有著使用者版面偏好定義，當偏好符合該指定的值時，該屬性評量為真，否則該評量為假。如果沒有定義使用者偏好，閱讀系統在選擇可用的內容釋義時，應該忽略這項屬性。

###### 範例 3

以下範例呈現在同一個容器中同一本雜誌同捆的兩份內容釋義。請注意，不需要描述預設內容釋義為可重排，主要因為內容釋義預設為可重排。

<container xmlns="urn:oasis:names:tc:opendocument:xmlns:container"
           xmlns:rendition="http://www.idpf.org/2013/rendition"
           version="1.0">
   <rootfiles>
       <rootfile full-path="EPUB/reflow/magazine.opf"
           media-type="application/oebps-package+xml"/>
       <rootfile full-path="EPUB/fxl/magazine.opf"
           media-type="application/oebps-package+xml"
           rendition:layout="pre-paginated"/>
    </rootfiles>
</container>

### 4.4.3 rendition:language屬性

rendition:language屬性指示該內容釋義為指定的語言最佳化。

### 屬性名稱
language

### 命名空間
http://www.idpf.org/2013/rendition

### 用法
可以用於容器文件的rootfile元素[epub-33].

### 值
必須包含合乎[rfc5646]的有效語言代碼。

rendition:language更加精確地用於識別該內容釋義的主要語言，更勝於在內容釋義的包裝文件中包含dc:language元素，因為dc:language元素主要指示指定的語言在該作品內容中受到顯著地使用。

如果在閱讀系統中有著使用者語言偏好定義，當偏好符合該指定的值時，該屬性評量為真，否則該評量為假。在[rfc4647]的第三章中定義了許多比對綱要。閱讀系統可以運用最合適的比對綱要。如果沒有定義使用者偏好，閱讀系統在選擇可用的內容釋義時，應該忽略這項屬性。

###### 範例 4

以下範例呈現一份多語系EPUB出版品，包含內容的英文、法文、西班牙文版內容釋義。

<container xmlns="urn:oasis:names:tc:opendocument:xmlns:container"
           xmlns:rendition="http://www.idpf.org/2013/rendition"
           version="1.0">
   <rootfiles>
       <rootfile full-path="EPUB/en/package.opf"
           media-type="application/oebps-package+xml"
           rendition:language="en"/>
       <rootfile full-path="EPUB/fr/package.opf"
           media-type="application/oebps-package+xml"
           rendition:language="fr"/>
       <rootfile full-path="EPUB/es/package.opf"
           media-type="application/oebps-package+xml"
           rendition:language="es"/>
   </rootfiles>
</container>

### 4.4.4 rendition:accessMode屬性

rendition:language屬性指示該內容釋義以何種方式傳達其知識內容，其基於 [iso24751-3]的"Access Mode"特性。

### 屬性名稱
accessMode

### 命名空間
http://www.idpf.org/2013/rendition

### 用法
可以用於容器文件的rootfile元素[epub-33].

### 值
必須為一或多個以下的值：auditory、tactile、textual或visual

rendition:accessMode屬性定義了該內容釋義主要的存取模式（不只一種）。例如，儘管一份文字作品可能包含圖片、聲音以及影片，其主要用於傳達資訊的手段為文字。同樣的，一份圖像作品可能包含替代文字以及/或有描述文字，但這些內容並不須在該內容釋義中列為textual模式來供選擇用途使用。

資訊以何種方式編碼，在指定存取模式時也需要進行考量。若一份作品具備文字元件，或者性質上全部都為文字，但內容卻被全部做成圖像格式呈現，該存取模式為visual（例如漫畫中的JPEG頁面裡包含角色對話，或者一份文件的掃瞄版）。

內容釋義可以包含多於一個的存取模式。例如，文字版本可能使用媒體覆蓋嵌入有聲版本。在這樣的案例中，該屬性應該將所有可用的主要存取模式列出。

如果在閱讀系統中有著使用者存取模式偏好定義，當偏好符合該指定的值時，該屬性評量為真，否則該評量為假。如果沒有定義使用者偏好，閱讀系統在選擇可用的內容釋義時，應該忽略這項屬性。

rendition:label屬性可以用來告知使用者該內容的本質，尤其在這樣的資訊無法取得，或者尚未標準化的狀況下供選擇使用。例如，tactile（觸覺）內容釋義可以透過其標籤指出盲文代碼以及等級，或者textual（文字）內容釋義可以標註其最佳化供文字轉換語音處理使用，而非一般性用途。


###### 範例 5
以下範例呈現一本EPUB出版品中有著基於圖像的內容釋義，並且也有基於文字的序列可以使用。

<container xmlns="urn:oasis:names:tc:opendocument:xmlns:container"
           xmlns:rendition="http://www.idpf.org/2013/rendition"
           version="1.0">
   <rootfiles>
       <rootfile full-path="EPUB/comic/package.opf"
           media-type="application/oebps-package+xml"
           rendition:accessMode="visual"/>
       <rootfile full-path="EPUB/novel/package.opf"
           media-type="application/oebps-package+xml"
           rendition:accessMode="textual"/>
   </rootfiles>
</container>

### 4.4.5 rendition:label屬性

rendition:label屬性允許每一個rootfile元素[epub-33]以人類可讀的名稱添加註解。

### 屬性名稱
label

### 命名空間
http://www.idpf.org/2013/rendition

### 用法
可以用於容器文件的rootfile元素[epub-33].

### 值
文字

rendition:label屬性為內容釋義提供名稱（例如供手動選擇內容釋義使用）。

rendition:label屬性使用的語言可以一個xml:lang屬性來進行表述。

###### 範例 6
以下範例呈現rendition:label屬性被用於為內容釋義提供人類可讀的名稱。

<container xmlns="urn:oasis:names:tc:opendocument:xmlns:container"
           xmlns:rendition="http://www.idpf.org/2013/rendition"
           version="1.0"
           xml:lang="en">
   <rootfiles>
        …
       <rootfile full-path="EPUB/package.opf"
           media-type="application/oebps-package+xml"
           rendition:media="color, min-width: 1024"
           rendition:layout="pre-paginated"
           rendition:label="Color-optimized print replica"/>
   </rootfiles>
</container>

rendition:label屬性並非用於評量要處理哪一個內容釋義的選擇用屬性。

## 4.5 處理模型

本章節描述閱讀系統選擇最佳化內容釋義呈現給讀者的方法。

選擇內容釋義應該發生在初次處理時，以及閱讀系統應該在使用者環境改變（例如，改變裝置方向或者可視尺寸時）作為反應重新對選擇進行評量。

當觸動狀態變更時，閱讀系統應該對容器文件中的rootfile元素[epub-33]以以下方式，從最後一個rootfile項目開始評量：

- 如果內容釋義有設定命名空間內的屬性，確認每一個屬性是否為4.4內容釋義選擇屬性中定義的屬性，並由其定義判斷指定的狀態是否為真：

- 如果所有的狀態評量為真，選擇該內容釋義並且離開選擇程序。

- 如果任一狀態為假，移去處理下一個rootfile元素，並且持續評量程序。

- 如果發現任何無法辨識的內容釋義屬性，就應該忽視，不供評量用途所使用。

- 如果找不到內容釋義中有任何命名空間內的屬性，移去處理下一個rootfile元素，並且持續評量程序。

- 如果處理到預設內容釋義，選擇該內容釋義並且離開程序。

###### 注意事項

本處理模型不要求選擇程序發生在使用者裝置上，或者提供容器中的所有內容釋義。例如，內容釋義選擇可以發生在基於雲端的遞送系統之伺服器端，並且僅將一個最佳匹配的內容釋義送到裝置上。

###### 注意事項

由於EPUB 2閱讀系統，以及不支援多重內容釋義選擇的EPUB 3閱讀系統只會處理預設內容釋義，EPUB製作者需要思考哪一個內容釋義在閱讀系統間有最廣的相容性，確保其被列於第一。

閱讀系統可以給使用者選項來手動選擇容器中的內容釋義。如果有的話，應該使用rendition:label屬性的值來作為選擇項目呈現。

由於以前EPUB沒有定義內容釋義選擇模型，一些EPUB出版品可能會有自己的選擇模型。如果可以辨識，則應該使用這些選擇模型。如果同時具備合乎本規格的內容釋義選擇屬性以及自行定義的屬性，後者應該被忽略。

# 5. 內容釋義映射

## 5.1 導論

本章節為非規範性。

內容釋義映射文件用於在一份多重內容釋義出版品中，跨內容釋義識別相關的內容位址，讓閱讀系統在切換內容釋義時，能夠保持使用者正在讀的位置。

內容釋義映射文件以XHTML呈現，使用nav元素透過無排序的列表來將映射位置分組。在內容釋義映射文件中沒有顯示用元件；設計上是為了啟動自動切換。由於XHTML內容模型缺少處理脈絡的方法，使得這份文件相當受限，僅允許在body中只用單一nav元素，以簡化製作與處理程序。

為了要在內容釋義間啟動內容位址的映射，內容釋義映射文件的nav元素包含了一系列一或多個無排序列表，每一項代表了跨所有內容釋義的共通點（例如，一章、一頁、或者頁內的一個元素）。在每一個無排序列表中的列表項目代表了一組對等的連結目標群，跨所有內容中可用的內容釋義（例如，一個連結可能指向固定版面內容釋義中的一頁，而可重排內容釋義的對等連結所指向的是包含該頁面XHTML內容文件的分頁指示點）。

閱讀系統可以檢查相鄰的列表項目來知悉使用者在目前內容釋義所讀到的位置，當脈絡發生變化，或者由使用者觸發時，能判斷載入哪一份EPUB內容文件最能符合新的狀態。

## 5.2 內容適用性

一本EPUB出版品可以包含一份內容釋義映射文件。

一份合乎規定的內容釋義映射文件：

- 必須合乎XHMTL需求[epub-33]中所定義對於XHTML內容文件的所有內容合規性限制。

- 必須合乎EPUB內容釋義映射文件定義中專對內容釋義映射文件制定的所有內容合規性限制。

- 不得於EPUB出版品的內容釋義中列於任一內容文件宣告中。

## 5.3 閱讀系統適用性

閱讀系統應該支援在切換內容時使用內容釋義映射文件。

支援映射的閱讀系統：

- 必須在更換內容釋義發生時，掌握內容釋義映射文件中現在所在位址，並且載入新內容釋義中的對應位置。

## 5.4 EPUB內容釋義對應文件定義

###### 注意事項

本檔案中的內容也非正式地透過一份XML綱要進行定義。請見A.3映射文件綱要以獲得更多細節。

### 5.4.1 XHTML內容文件：限制

內容釋義映射文件須遵從XHTML內容文件規定，但在[html]內容模型上有著以下限制：

- html、head、body、ul及li元素不允許使用任何屬性。（僅允許xmlns偽屬性用於宣告命名空間）nav元素僅接受一個epub:type屬性。

- head只能包含meta元素。meta元素只能附加charset屬性或者name以及content屬性。

- head必須包含一個meta元素，其name屬性的值為"epub.multiple.renditions.version"，其content屬性的值為"1.0"。閱讀系統可以忽略所有其他的meta元素。

- body元素必須包含唯一的nav子元素，其epub:type指定值為"resource-map"，以及可以包含一或多個選擇性的nav元素。在body的子元素中，不能有其他[html]內容。

### 5.4.2 nav元素：變更與限制

本規格在內容釋義映射文件中限制nav元素及其子孫項的內容模型如下：

- 每一個nav元素必須透過一個epub:type屬性以識別其特質。

- 內容釋義映射文件使用無排序列表(ul)代替有序列表(ol)。

- nav元素可以包含一或多個ul元素。

- 每一列表項目必須包含唯一的a元素（也就是禁止使用span標題以及巢狀列表）。

- a元素必須為空。

- a元素必須指向所參照的內容釋義如下：

	- 使用跨出版品CFI[epubcfi-11]作為其href屬性的值，或者，

	- 透過一個epub:rendition屬性，其值為該內容釋義中出版品文件的相對路徑。

### 5.4.3 內容釋義對應

每一個在內容釋義映射文件resource-map nav元素中的ul元素用於識別內容位址，其子li元素表列每一個可使用內容釋義的對應位址。結果使得每一個ul元素必須為每一份內容釋義包含一個li。

###### 注意事項

為了讓使用案例更為多元，本規格並不指定映射的粒度等級。例如，有些出版品目標讀者為語言學習者，可能會定義句子層級為同步點，而其他類別的出版品可能只會跨內容釋義時對應到主要章節而已。

每一個在無排序列表中的列表項目必須為a子元素中定義的內容釋義，指向一份EPUB內容文件，或者其中的一個斷片。每一個連結必須參照線性最高層級內容文件[epub-33]。

每一個a元素必須指定所參照的內容釋義，以1)在其href屬性中包含跨出版品CFI[epubcfi-11]的方式，或者2)在epub:rendition屬性中，將該內容釋義包裝文件的相對路徑作為值提供。

如果使用epub:rendition屬性來指定目標內容釋義，在a元素的href屬性中，任何斷片識別碼綱要都可以被當作URL的值使用（例如，唯一識別碼，或者W3C媒體斷片）。

###### 注意事項

我們強烈推薦使用[epubcfi-11]表述，勝於其他斷片識別綱要（尤其在可重排XHTML內容文件的脈絡下），因為該表述可以讓閱讀系統無需做任何預先處理，就能獲得內容釋義映射資訊。

反過來說，使用唯一識別碼強制閱讀系統要載入目標的EPUB內容文件，並且處理其DOM以能排序/比較連結目的地（與文件順序的關係）。這額外的處理和效能相關，並且會增加在快取、增量更新等的實作成本。

###### 範例 7

以下範例呈現一份內容釋義映射文件用來對一本雜誌中的3個內容釋義：文字、直式（Portrait）以及橫式（Landscape）。'article 1'跨固定版面內容釋義的第五與第六頁，而橫式內容釋義使用跨頁（非同步）。

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta charset="utf-8"/>
    </head>
    <body>
        <nav epub:type="resource-map">
            <ul>
             <!-- First Page of the Article 1 -->
                 <li>
                     <a href= "../../text/default.opf#epubcfi(/6/8[article1]!/4/2:20)" />
                 </li>
                 <li>
                     <a href="../../images/page5.png"
                        epub:rendition="../../portrait/portrait.opf" />
                 </li>
             </ul>
             <ul>
                 <!-- Second Page of the Article 1 -->
                 <li>
                     <a href= "../../text/default.opf#epubcfi(/6/8[article1]!/4/22:40)" />
                 </li>
                 <li>
                     <a href="../../images/page6.png"
                        epub:rendition="../../portrait/portrait.opf" />
                 </li>
             </ul>
             <ul>
                 <!-- Article 1 -->
                 <li>
                     <a href= "../../text/default.opf#epubcfi(/6/8[article1])" />
                 </li>
                 <li>
                     <a href="../../images/page5-6.png"
                        epub:rendition="../../landscape/landscape.opf" />
                 </li>
             </ul>
        </nav>
    </body>
</html>

###### 範例 8

以下範例呈現一份多語系EPUB出版品，其不同語言分別位於獨立的內容釋義。

<html xmlns="http://www.w3.org/1999/xhtml">
    <head>
        <meta charset="utf-8"/>
    </head>
    <body>
        <nav epub:type="resource-map">
            <ul>
                <!-- Chapter 1 -->
                <li><a href = "../../en/en.opf#epubcfi(/6/2)" /></li>
                <li><a href = "../../fr/fr.opf#epubcfi(/6/4)" /></li>
                <li><a href = "../../de/de.opf#epubcfi(/6/2)" /></li>
                <li><a href = "../../es/es.opf#epubcfi(/6/6)" /></li>
                <li><a href = "../../it/it.opf#epubcfi(/6/2)" /></li>
            </ul>
            <ul>
                 <!-- Chapter 2 -->
                <li><a href = "../../en/en.opf#epubcfi(/6/4)" /></li>
                <li><a href = "../../fr/fr.opf#epubcfi(/6/6)" /></li>
                <li><a href = "../../de/de.opf#epubcfi(/6/4)" /></li>
                <li><a href = "../../es/es.opf#epubcfi(/6/8)" /></li>
                <li><a href = "../../it/it.opf#epubcfi(/6/6)" /></li>
            </ul>
            <ul>
                <!-- Chapter 3 -->
                <li><a href = "../../en/en.opf#epubcfi(/6/6)" /></li>
                <li><a href = "../../fr/fr.opf#epubcfi(/6/8)" /></li>
                <li><a href = "../../de/de.opf#epubcfi(/6/6)" /></li>
                <li><a href = "../../es/es.opf#epubcfi(/6/10)" /></li>
                <li><a href = "../../it/it.opf#epubcfi(/6/8)" /></li>
            </ul>
            <!-- …  could be even more fine grained for better results … -->
        </nav>
    </body>
</html>

### 5.4.4 在容器中識別

內容釋義映射文件的位址，在容器文件中使用一個link元素[epub-33]來進行識別，其位於：

- href屬性必須參照內容釋義映射文件相對於EPUB容器根目錄所在的位址；

- rel屬性必須指定為值"mapping"；

- media-type屬性必須指定為值"application/xhtml+xml"。

容器文件不得參照多於一個的映射文件。

###### 範例 9

以下範例呈現多語系EPUB出版品的container.xml檔案。內容釋義映射文件的位址包含在link元素內。

<container xmlns="urn:oasis:names:tc:opendocument:xmlns:container"
           xmlns:rendition="http://www.idpf.org/2013/rendition"
           version="1.0">
   <rootfiles>
       <rootfile full-path="en/en.opf"
           rendition:language="en"
           media-type="application/oebps-package+xml" />
       <rootfile full-path="de/de.opf"
           rendition:language="de"
           media-type="application/oebps-package+xml" />
   </rootfiles>
   <links>
      <link href="renditionMapping.html"
             rel="mapping"
             media-type="application/xhtml+xml" />
   </links>
</container>

## 5.5 處理模型

本章節為非規範性。

本章節提供一個非規範性的模型，供閱讀系統處理內容釋義映射文件。該模型不描述如何或者何時閱讀系統該切換內容釋義。

內容釋義映射文件映射能力預期的結果為在新的內容釋義中展示內容，其位址相等於目前內容釋義所呈現，因此使用者可以在閱讀時維持位置。為達到此目的，欲遵從此規格的閱讀系統可以跟隨以下步驟，當觸發狀態變更時，重設目前的內容釋義：

- 首先，需要辨明目前內容釋義所在的位置範圍：
	- 對於固定格式的內容釋義而言，位置極有可能落在目前可視區域的範圍之內。
	- 對於可重排的內容釋義而言，位置極有可能落在目前呈現在螢幕上的文字範圍。

- 其次，需要決定要導向哪一個內容釋義，如4.5處理模型所定義。

- 最後閱讀系統可以分析ul元素以找到其包含li元素的a子元素，其中指定相同內容釋義，並且與目前的範圍重疊：

	- 如果僅有一個這樣的ul元素，閱讀系統將導向新內容釋義中該範圍的開始處。

	- 如果有多於一個這樣的ul元素，並且閱讀系統行為尚未定義，閱讀系統可以協助使用者選擇新的位址，或者可以預測的方式在其中選擇適當的位址。

	- 如果沒有匹配的ul元素，閱讀系統將需要決定新內容釋義中導向的位置，就如同沒有內容釋義映射文件一樣。

請注意，導向時發生的事件將大幅影響使用者經驗，所以閱讀系統可以在上列以外增加額外的資訊已達到更好的結果。

# A. 綱要

本章節為非規範性。

使用本附錄中的綱要進行驗證，需要支援[relaxng-schema]及[xmlschema11-2]的處理器。

## A.1 Metadata.xml綱要

用於在metadata.xml檔案中包含後設資料的綱要，如3.2出版品後設資料所說明，可於 https://github.com/w3c/epubcheck/blob/main/src/main/resources/com/adobe/epubcheck/schema/30/ocf-metadata-30.rnc 取得。


## A.2 Container.xml綱要

用於在container.xml檔案中包含內容釋義選擇屬性的綱要，如4. 選擇內容釋義所說明，可於 https://github.com/w3c/epubcheck/blob/main/src/main/resources/com/adobe/epubcheck/schema/30/multiple-renditions/container.rnc 取得。

## A.3 對應文件綱要

用於映射文件的綱要，如5. 內容釋義映射所說明，可於 https://github.com/w3c/epubcheck/blob/main/src/main/resources/com/adobe/epubcheck/schema/30/multiple-renditions/mapping.rnc 取得。

# B. 變更日誌

本章節為非規範性。

請注意本變更日誌僅列出自EPUB多重內容釋義出版品1.0以來的顯著變更——這些變更會影響EPUB出版品的適用性或有同等的重要性。

若要取得在改版過程中所有議題的列表，請參考工作小組的議題追蹤器。

19-Mar-2021: 在metadata.xml檔案中要求使用唯一識別碼供模糊化資源使用，並且推薦使用預設內容釋義的識別碼，請見issue 1443。

19-Mar-2021: 增加注意事項以說明包裝文件需要被放在共通的資料夾中才能分享資源。請見issue 619。

19-Mar-2021: 修正link元素作為容器元素子元素中錯誤的參照。請見issue 584。

24-Dec-2020: 本規格不再參照發布識別碼，但依然需要在metadata.xml檔案中包含唯一識別碼與最後修改日期供向後相容性使用。請見issue 1440。

16-Dec-2020: 與EPUB出版品內容釋義相關的術語及需求移到本規格，以便於閱讀本規格和[epub-33]規格。這些變更不影響在EPUB出版品中包含多重內容釋義。請見issue 1436。

# C. 謝詞

本章節為非規範性。

以下EPUB 3工作小組的成員對本規格的產製有所貢獻：

Will AWAD (Newgen Knowledgeworks)
Sofia Bautista (Legible Media Inc.)
Laura Brady (Legible Media Inc.)
Leah Brochu (National Network for Equitable Library Service)
Matthew C. Chan (House of Anansi Press)
Yu-Wei Chang (Taiwan Digital Publishing Forum)
Fred Chasen (Scribd)
Juan Corona (Legible Media Inc.)
Dave Cramer (W3C Invited Expert, chair)
Romain Deltour (DAISY Consortium)
Marisa DeMeglio (DAISY Consortium)
Brady Duga (Google LLC)
Reinaldo Ferraz (NIC.br - Brazilian Network Information Center)
John Foliot (W3C Invited Expert)
Teenya Franklin (Pearson plc)
Hadrien Gardeur (EDRLab)
Matt Garrish (DAISY Consortium)
Jen Goulden (Crawford Technologies)
Ivan Herman (W3C, staff contact)
Tetsu Hoshino (Kodansha, Publishers, Ltd.)
Norikazu Ishizu (Kadokawa Corporation)
Norihito IYENAGA (Kodansha, Publishers, Ltd.)
Rick Johnson (VitalSource Technologies)
Ken Jones (Circular Software)
Antonio Kamiya (Dentsu Group Inc.)
Deborah Kaplan (W3C Invited Expert)
Bill Kasdorf (Book Industry Study Group)
George Kerscher (DAISY Consortium)
Kazuhito Kidachi (Mitsue-Links Co., Ltd.)
Masakazu Kitahara (Voyager Japan, Inc.)
Toshiaki Koike (Voyager Japan, Inc.)
Ryo Kuroda (ACCESS CO., LTD.)
Charles LaPierre (Benetech)
Dan Lazin (Google LLC)
Laurent Le Meur (EDRLab)
Victoria Lee (Apple, Inc.)
Farrah Little (National Network for Equitable Library Service)
Victor Lopes (Apple, Inc.)
Karan Malhotra (Newgen Knowledgeworks)
Makoto Murata (DAISY Consortium)
Cristina Mussinelli (Fondazione LIA)
Yoichiro Nagao (Kodansha, Publishers, Ltd.)
Theresa O'Connor (Apple, Inc.)
Yoshinori Ohmura (SHUEISHA Inc.)
Rachel Osolen (National Network for Equitable Library Service)
Gregorio Pellegrino (Fondazione LIA)
Vijaya Gowri Perumal (Newgen Knowledgeworks)
Wendy Reid (Rakuten Group, Inc., chair)
John Roque (Apple, Inc.)
Leonard Rosenthol (Adobe)
Shinobu Sato (Kadokawa Corporation)
Ben Schroeter (Pearson plc)
Daihei Shiohama (MEDIA DO Co., Ltd.)
Tzviya Siegman (Wiley)
Avneesh Singh (DAISY Consortium)
MOTOI SUZUKI (SHUEISHA Inc.)
Yutaka Suzuki (Kadokawa Corporation)
Kyrce Swenson (Pearson plc)
Shinya Takami (Kadokawa Corporation, chair)
Mateus Teixeira (W. W. Norton & Company)
Yukio Tomikura (Kodansha, Publishers, Ltd.)
Aimee Ubbink (Crawford Technologies)
Daniel Weck (DAISY Consortium)
Zheng Xu (Gardenia Corp)
Fuqiao Xue (W3C)
Evan Yamanishi (W. W. Norton & Company)
Osamu Yoshiba (Kodansha, Publishers, Ltd.)
Junichi Yoshii (Kodansha, Publishers, Ltd.)
Naomi Yoshizawa (W3C)
Laurence Zaysser (EDRLab)

# D. 參考資料
## D.1 規範性文件

[dcterms]
DCMI Metadata Terms. DCMI ### 用法 Board. DCMI. 20 January 2020. DCMI Recommendation. URL: https://www.dublincore.org/specifications/dublin-core/dcmi-terms/
[epub-33]
EPUB 3.3. Matt Garrish; Ivan Herman; Dave Cramer. W3C. 3 October 2022. W3C Candidate Recommendation. URL: https://www.w3.org/TR/epub-33/
[epubcfi-11]
EPUB Canonical Fragment Identifiers 1.1. Peter Sorotokin; Garth Conboy; Brady Duga; John Rivlin; Don Beaver; Kevin Ballard; Alastair Fettes; Daniel Weck. IDPF. 5 October 2017. URL: http://idpf.org/epub/linking/cfi/epub-cfi-20170105.html
[html]
HTML Standard. Anne van Kesteren; Domenic Denicola; Ian Hickson; Philip Jägenstedt; Simon Pieters. WHATWG. Living Standard. URL: https://html.spec.whatwg.org/multipage/
[iso24751-3]
ISO/IEC 24751-3:2008 Information technology -- Individualized adaptability and accessibility in e-learning, education and training -- Part 3: "Access for all" digital resource description. 2008-10-01. URL: http://www.iso.org/iso/catalogue_detail?csnumber=43604
[mediaqueries]
Media Queries Level 4. Florian Rivoal; Tab Atkins Jr.. W3C. 25 December 2021. W3C Candidate Recommendation. URL: https://www.w3.org/TR/mediaqueries-4/
[RFC2119]
Key words for use in RFCs to Indicate Requirement Levels. S. Bradner. IETF. March 1997. Best Current Practice. URL: https://www.rfc-editor.org/rfc/rfc2119
[rfc4647]
Matching of Language Tags. A. Phillips, Ed.; M. Davis, Ed.. IETF. September 2006. Best Current Practice. URL: https://www.rfc-editor.org/rfc/rfc4647
[rfc5646]
Tags for Identifying Languages. A. Phillips, Ed.; M. Davis, Ed.. IETF. September 2009. Best Current Practice. URL: https://www.rfc-editor.org/rfc/rfc5646
[RFC8174]
Ambiguity of Uppercase vs Lowercase in RFC 2119 Key Words. B. Leiba. IETF. May 2017. Best Current Practice. URL: https://www.rfc-editor.org/rfc/rfc8174

## D.2 參考性文件

[relaxng-schema]
Information technology -- Document Schema Definition Language (DSDL) -- Part 2: Regular-grammar-based validation -- RELAX NG. ISO/IEC. 2008. URL: http://standards.iso.org/ittf/PubliclyAvailableStandards/c052348_ISO_IEC_19757-2_2008(E).zip
[xmlschema11-2]
W3C XML Schema Definition Language (XSD) 1.1 Part 2: Datatypes. David Peterson; Sandy Gao; Ashok Malhotra; Michael Sperberg-McQueen; Henry Thompson; Paul V. Biron et al. W3C. 5 April 2012. W3C Recommendation. URL: https://www.w3.org/TR/xmlschema11-2/
